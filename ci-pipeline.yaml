name: CI-Pipeline

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'

steps:

#- script: echo Hello, from the CI pipeline!
#  displayName: 'Run a one-line script'

# Include .NET 8 SDK...
- task: UseDotNet@2
  displayName: "----------> Include .NET 8 SDK <----------"
  inputs:
    packageType: sdk
    version: '8.0.x'

# Double check the above has been done...
- task: CmdLine@2
  displayName: "----------> List .NET SDKs <----------"
  inputs:
    script: 'dotnet --list-sdks'

# Show me the directory...
- task: CmdLine@2
  displayName: "----------> Show directory contents <----------"
  inputs:
    script: 'dir'

# Build the API project...
- task: DotNetCoreCLI@2
  displayName: "----------> Build API <----------"
  inputs:
    command: build
    projects: 'src/Morsley.UK.Test.API/Morsley.UK.Test.API.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "----------> Run API Unit Tests <----------"
  inputs:
    command: test
    projects: 'tests/Morsley.UK.Tests.API.UnitTests/Morsley.UK.Tests.API.UnitTests.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: "----------> Publish Code Coverage Results <----------"
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'tests/Morsley.UK.Tests.API.UnitTests/TestResults/coverage.cobertura.xml'
    reportDirectory: 'tests/Morsley.UK.Tests.API.UnitTests/TestResults'
    failIfCoverageEmpty: true